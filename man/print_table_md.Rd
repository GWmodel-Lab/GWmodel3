% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/print_table.R
\name{print_table_md}
\alias{print_table_md}
\alias{matrix2char}
\title{Print a character matrix as a table.}
\usage{
print_table_md(
  x,
  col.sep = "",
  header.sep = "",
  row.begin = "",
  row.end = "",
  table.style = c("plain", "md", "latex"),
  ...
)

matrix2char(m, fmt = "\%.3f")
}
\arguments{
\item{x}{A character matrix.}

\item{col.sep}{Column seperator. Default to `""`.}

\item{header.sep}{Header seperator. Default to `"-"`.}

\item{row.begin}{Character at the beginning of each row.
Default to `col.sep`.}

\item{row.end}{Character at the ending of each row.
Default to `col.sep`.}

\item{table.style}{Name of pre-defined style.
Possible values are `"plain"`, `"md"` or `"latex"`. Default to `"plain"`.}

\item{\dots}{Additional style control arguments.}

\item{m}{A numeric matrix.}

\item{fmt}{Format string. Passing to [base::sprintf()].}
}
\value{
No return.
}
\description{
Print a character matrix as a table.
}
\details{
When `table.style` is specified, `col.sep`, `header.sep`, `row.begin`
and `row.end` would not take effects.
Because this function will automatically set their values.
For each possible value of `table.style`, its corresponding style settings
are shown in the following table.
\tabular{llll}{
                  \tab \strong{\code{plain}} \tab \strong{\code{md}} \tab \strong{\code{latex}} \cr
\code{col.sep}    \tab \code{""}             \tab \code{"|"}         \tab \code{"&"}            \cr
\code{header.sep} \tab \code{""}             \tab \code{"-"}         \tab \code{""}             \cr
\code{row.begin}  \tab \code{""}             \tab \code{"|"}         \tab \code{""}             \cr
\code{row.end}    \tab \code{""}             \tab \code{"|"}         \tab \code{"\\\\"}
}

In this function, characters are right padded by spaces.
}
\section{Functions}{
\itemize{
\item \code{matrix2char}: Convert a numeric matrix to character matrix
according to a format string.
}}

\seealso{
[print.gwrm()].

[base::sprintf()], [print.hgwrm()], [print.summary.hgwrm()].
}
